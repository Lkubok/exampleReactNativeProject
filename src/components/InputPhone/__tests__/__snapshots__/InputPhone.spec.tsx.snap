// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputPhone component should match snapshot when 1 line 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "height": 74,
      }
    }
  >
    <Text
      style={
        Object {
          "color": "[7m[38;2;138;138;142m#8a8a8e[39m[27m",
          "fontFamily": "SFCompactText-Semibold",
          "fontSize": 18,
          "marginBottom": 12,
        }
      }
    />
    <View
      style={
        Object {
          "alignContent": "flex-start",
          "flex": 1,
          "flexDirection": "row",
          "height": 32,
          "justifyContent": "flex-start",
        }
      }
    >
      <View
        style={
          Object {
            "height": 32,
            "marginRight": 12,
            "width": 50,
          }
        }
      >
        <View>
          <View
            style={
              Object {
                "marginBottom": 24,
                "paddingBottom": 0,
                "paddingHorizontal": 10,
                "paddingLeft": 0,
                "paddingRight": 0,
                "width": "100%",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "borderBottomWidth": 1,
                  "borderColor": "[7m[38;2;196;196;198m#c4c4c6[39m[27m",
                  "flexDirection": "row",
                  "paddingBottom": 0,
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                  ],
                }
              }
            >
              <TextInput
                allowFontScaling={true}
                autoCapitalize="none"
                editable={true}
                keyboardType="default"
                onBlur={[Function]}
                onChangeText={[Function]}
                onFocus={[Function]}
                placeholder=""
                placeholderTextColor="#86939e"
                rejectResponderTermination={true}
                style={
                  Object {
                    "alignSelf": "center",
                    "color": "[7m[38;2;0;0;0m#000000[39m[27m",
                    "flex": 1,
                    "fontSize": 17,
                    "minHeight": 40,
                  }
                }
                testID="RNE__Input__text-input"
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
            <Text
              style={
                Object {
                  "color": "[7m[38;2;194;17;20m#c21114[39m[27m",
                  "fontFamily": "SFCompactText-Medium",
                  "fontSize": 16,
                  "height": 0,
                  "margin": 0,
                  "marginLeft": 0,
                  "padding": 0,
                }
              }
            />
          </View>
          <View
            accessible={true}
            focusable={true}
            hitSlop={
              Object {
                "bottom": 12,
                "left": 12,
                "right": 12,
                "top": 12,
              }
            }
            onClick={[Function]}
            style={
              Object {
                "height": "100%",
                "left": 0,
                "opacity": 1,
                "position": "absolute",
                "top": 0,
                "width": "100%",
              }
            }
          />
        </View>
        <Modal
          animationType="none"
          deviceHeight={null}
          deviceWidth={null}
          hardwareAccelerated={false}
          hideModalContentWhileAnimating={true}
          onBackdropPress={[Function]}
          onModalHide={[Function]}
          onModalWillHide={[Function]}
          onModalWillShow={[Function]}
          onRequestClose={[Function]}
          onShow={[Function]}
          panResponderThreshold={4}
          scrollHorizontal={false}
          scrollOffset={0}
          scrollOffsetMax={0}
          scrollTo={null}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          swipeThreshold={100}
          transparent={true}
          visible={false}
        >
          <View
            accessible={true}
            focusable={true}
            forwardedRef={[Function]}
            onClick={[Function]}
            style={
              Object {
                "backgroundColor": "black",
                "bottom": 0,
                "height": 1334,
                "left": 0,
                "opacity": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
                "width": 750,
              }
            }
          />
          <View
            deviceHeight={null}
            deviceWidth={null}
            forwardedRef={[Function]}
            hideModalContentWhileAnimating={true}
            onBackdropPress={[Function]}
            onModalHide={[Function]}
            onModalWillHide={[Function]}
            onModalWillShow={[Function]}
            onShow={[Function]}
            panResponderThreshold={4}
            pointerEvents="box-none"
            scrollHorizontal={false}
            scrollOffset={0}
            scrollOffsetMax={0}
            scrollTo={null}
            style={
              Object {
                "flex": 1,
                "justifyContent": "flex-end",
                "margin": 37.5,
                "transform": Array [
                  Object {
                    "translateY": 0,
                  },
                ],
              }
            }
            supportedOrientations={
              Array [
                "portrait",
                "landscape",
              ]
            }
            swipeThreshold={100}
          >
            <View
              style={
                Object {
                  "backgroundColor": "[7m[38;2;255;255;255m#ffffff[39m[27m",
                  "borderColor": "rgba(0, 0, 0, 0.1)",
                  "borderRadius": 10,
                }
              }
            >
              <View
                style={
                  Object {
                    "borderBottomColor": "rgba(165,165,165,0.2)",
                    "borderBottomWidth": 1,
                    "padding": 12,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "[7m[38;2;234;51;54m#ea3336[39m[27m",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "textAlign": "center",
                    }
                  }
                >
                  Select phone prefix
                </Text>
              </View>
              <View
                style={
                  Object {
                    "maxHeight": 200,
                    "overflow": "hidden",
                  }
                }
              >
                <RNCPicker
                  items={Array []}
                  onChange={[Function]}
                  selectedIndex={0}
                  style={
                    Object {
                      "color": "[7m[38;2;0;0;0m#000000[39m[27m",
                      "height": 216,
                    }
                  }
                />
              </View>
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                style={
                  Object {
                    "backgroundColor": "[7m[38;2;255;255;255m#ffffff[39m[27m",
                    "borderBottomEndRadius": 10,
                    "borderBottomStartRadius": 10,
                    "borderTopColor": "rgba(165,165,165,0.2)",
                    "borderTopWidth": 1,
                    "fontWeight": "500",
                    "opacity": 1,
                    "paddingVertical": 15,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "[7m[38;2;234;51;54m#ea3336[39m[27m",
                      "fontSize": 18,
                      "fontWeight": "700",
                      "textAlign": "center",
                    }
                  }
                >
                  OK
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "marginVertical": 10,
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                style={
                  Object {
                    "backgroundColor": "[7m[38;2;255;255;255m#ffffff[39m[27m",
                    "borderRadius": 10,
                    "opacity": 1,
                    "padding": 15,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "[7m[38;2;198;198;198m#c6c6c6[39m[27m",
                      "fontSize": 17,
                      "fontWeight": "400",
                      "textAlign": "center",
                    }
                  }
                >
                  Cancel
                </Text>
              </View>
            </View>
          </View>
        </Modal>
      </View>
      <View
        style={
          Object {
            "flexGrow": 1,
            "height": 32,
          }
        }
      >
        <View
          style={
            Object {
              "marginBottom": 24,
              "paddingBottom": 0,
              "paddingHorizontal": 10,
              "paddingLeft": 0,
              "paddingRight": 0,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomWidth": 1,
                "borderColor": "[7m[38;2;196;196;198m#c4c4c6[39m[27m",
                "flexDirection": "row",
                "paddingBottom": 0,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              autoCapitalize="none"
              editable={true}
              keyboardType="numbers-and-punctuation"
              maxLength={9}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholderTextColor="#86939e"
              rejectResponderTermination={true}
              returnKeyType="next"
              style={
                Object {
                  "alignSelf": "center",
                  "color": "[7m[38;2;0;0;0m#000000[39m[27m",
                  "flex": 1,
                  "fontSize": 17,
                  "minHeight": 40,
                }
              }
              testID="RNE__Input__text-input"
              underlineColorAndroid="transparent"
            />
          </View>
          <Text
            style={
              Object {
                "color": "[7m[38;2;194;17;20m#c21114[39m[27m",
                "fontFamily": "SFCompactText-Medium",
                "fontSize": 16,
                "height": 0,
                "margin": 0,
                "marginLeft": 0,
                "padding": 0,
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
